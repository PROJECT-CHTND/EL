version: '3.8'

services:
  redis:
    image: redis:7
    container_name: redis-el
    ports:
      - "6379:6379"
    restart: unless-stopped

  neo4j:
    image: neo4j:5
    container_name: neo4j-el
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD}
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - neo4j_data:/data
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-el
    command: ["--config.file=/etc/prometheus/prometheus.yml", "--storage.tsdb.path=/prometheus"]
    ports:
      - "9090:9090"
    volumes:
      - ./ops/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.3
    container_name: loki-el
    command: ["-config.file=/etc/loki/config.yaml"]
    ports:
      - "3100:3100"
    volumes:
      - ./ops/loki-config.yaml:/etc/loki/config.yaml:ro
      - loki_data:/loki
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.3
    container_name: promtail-el
    command: ["-config.file=/etc/promtail/config.yaml"]
    volumes:
      - ./ops/promtail-config.yaml:/etc/promtail/config.yaml:ro
      - /Users/nagisakugawa/dev/Projects/EL/logs/wal:/var/log/wal:ro
    depends_on:
      - loki
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.4.6
    container_name: grafana-el
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./ops/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./ops/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
      - loki
    restart: unless-stopped

volumes:
  neo4j_data:
  loki_data:
